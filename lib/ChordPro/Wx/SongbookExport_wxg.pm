# generated by wxGlade 1.1.0b1 on Tue Sep 10 11:54:33 2024
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx qw[:allclasses];
use strict;

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package ChordPro::Wx::SongbookExport_wxg;

use Wx qw[:everything];
use base qw(Wx::Dialog);
use strict;

use Wx::Locale gettext => '_T';
sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $title  = ""                 unless defined $title;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: ChordPro::Wx::SongbookExport_wxg::new
    use ChordPro::Wx::Utils;
    $style = wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxRESIZE_BORDER
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->SetTitle(_T("Songbook from Folder"));
    
    $self->{sz_export_outer} = Wx::BoxSizer->new(wxVERTICAL);
    
    $self->{sz_export_inner} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sz_export_outer}->Add($self->{sz_export_inner}, 1, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 5);
    
    $self->{label_3} = Wx::StaticText->new($self, wxID_ANY, _T("Generates and previews a songbook from all ChordPro files in the folder."));
    $self->{label_3}->Wrap(450);
    $self->{sz_export_inner}->Add($self->{label_3}, 0, wxBOTTOM|wxEXPAND, 10);
    
    $self->{sz_sbexp} = Wx::GridBagSizer->new(5, 5);
    $self->{sz_export_inner}->Add($self->{sz_sbexp}, 1, wxEXPAND, 5);
    
    $self->{label_1} = Wx::StaticText->new($self, wxID_ANY, _T("Folder"));
    $self->{sz_sbexp}->Add($self->{label_1}, Wx::GBPosition->new(0, 0), Wx::GBSpan->new(1, 1), wxALIGN_CENTER_VERTICAL, 5);
    
    $self->{dp_folder} = Wx::DirPickerCtrl->new($self, wxID_ANY, "", "Select a folder with songs", wxDefaultPosition, wxDefaultSize, wxDIRP_DEFAULT_STYLE|wxDIRP_USE_TEXTCTRL|wxDIRP_SMALL);
    $self->{dp_folder}->SetToolTip(_T("Select a folder with songs."));
    $self->{sz_sbexp}->Add($self->{dp_folder}, Wx::GBPosition->new(0, 1), Wx::GBSpan->new(1, 1), wxEXPAND, 0);
    
    $self->{sz_sbexp}->Add(1, 1, Wx::GBPosition->new(1, 0), Wx::GBSpan->new(1, 1), 0, 0);
    
    $self->{l_info} = Wx::StaticText->new($self, wxID_ANY, _T("Select a folder with ChordPro songs"));
    $self->{sz_sbexp}->Add($self->{l_info}, Wx::GBPosition->new(1, 1), Wx::GBSpan->new(1, 1), wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    
    $self->{w_rearrange} = Wx::RearrangeCtrl->new($self, wxID_ANY, wxDefaultPosition, wxDefaultSize, [-1,-1,-1,-1], ["","","",""]);
    $self->{w_rearrange}->SetMinSize(Wx::Size->new(-1, 200));
    $self->{w_rearrange}->SetToolTip(_T("Select and rearrange the songbook files."));
    $self->{w_rearrange}->Show(0);
    $self->{sz_sbexp}->Add($self->{w_rearrange}, Wx::GBPosition->new(2, 0), Wx::GBSpan->new(1, 2), wxEXPAND|wxRESERVE_SPACE_EVEN_IF_HIDDEN, 0);
    
    my $static_line_2 = Wx::StaticLine->new($self, wxID_ANY);
    $self->{sz_sbexp}->Add($static_line_2, Wx::GBPosition->new(3, 0), Wx::GBSpan->new(1, 1), 0, 0);
    
    my $static_line_3 = Wx::StaticLine->new($self, wxID_ANY);
    $self->{sz_sbexp}->Add($static_line_3, Wx::GBPosition->new(3, 1), Wx::GBSpan->new(1, 1), 0, 0);
    
    my $label_2 = Wx::StaticText->new($self, wxID_ANY, _T("Title"));
    $self->{sz_sbexp}->Add($label_2, Wx::GBPosition->new(4, 0), Wx::GBSpan->new(1, 1), wxALIGN_CENTER_VERTICAL, 5);
    
    $self->{t_exporttitle} = Wx::TextCtrl->new($self, wxID_ANY, "");
    $self->{t_exporttitle}->SetToolTip(_T("Specify the title for the songbook."));
    $self->{sz_sbexp}->Add($self->{t_exporttitle}, Wx::GBPosition->new(4, 1), Wx::GBSpan->new(1, 1), wxEXPAND, 5);
    
    my $label_4 = Wx::StaticText->new($self, wxID_ANY, _T("Cover"));
    $self->{sz_sbexp}->Add($label_4, Wx::GBPosition->new(5, 0), Wx::GBSpan->new(1, 1), wxALIGN_CENTER_VERTICAL, 0);
    
    $self->{fp_coverpage} = Wx::FilePickerCtrl->new($self, wxID_ANY, "", "Select a PDF to use as coverpage", "PDF files (*.pdf)|*.pdf|All files|*.*", wxDefaultPosition, wxDefaultSize, wxFLP_DEFAULT_STYLE|wxFLP_USE_TEXTCTRL|wxFLP_SMALL);
    $self->{fp_coverpage}->SetToolTip(_T("Select a PDF document to be used as the cover page for the songbook."));
    $self->{sz_sbexp}->Add($self->{fp_coverpage}, Wx::GBPosition->new(5, 1), Wx::GBSpan->new(1, 1), wxEXPAND, 0);
    
    $self->{sz_export_outer}->Add(1, 1, 0, wxEXPAND, 0);
    
    my $static_line_1 = Wx::StaticLine->new($self, wxID_ANY);
    $self->{sz_export_outer}->Add($static_line_1, 0, wxEXPAND|wxTOP, 5);
    
    $self->{sz_sbexp_buttons} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sz_export_outer}->Add($self->{sz_sbexp_buttons}, 0, wxALL|wxEXPAND, 5);
    
    $self->{sz_sbexp_buttons}->Add(5, 1, 1, wxEXPAND, 0);
    
    $self->{b_cancel} = Wx::Button->new($self, wxID_CANCEL, "");
    $self->{sz_sbexp_buttons}->Add($self->{b_cancel}, 0, 0, 0);
    
    $self->{b_ok} = Wx::Button->new($self, wxID_OK, "");
    $self->{b_ok}->SetDefault();
    $self->{sz_sbexp_buttons}->Add($self->{b_ok}, 0, wxLEFT, 5);
    
    $self->{sz_sbexp}->AddGrowableCol(1);
    
    $self->SetSizer($self->{sz_export_outer});
    $self->{sz_export_outer}->Fit($self);
    
    $self->Layout();
    Wx::Event::EVT_BUTTON($self, $self->{b_cancel}->GetId, $self->can('OnCancel'));
    Wx::Event::EVT_BUTTON($self, $self->{b_ok}->GetId, $self->can('OnAccept'));

    # end wxGlade
    return $self;

}


sub OnCancel {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::SongbookExport_wxg::OnCancel <event_handler>
    warn "Event handler (OnCancel) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnAccept {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::SongbookExport_wxg::OnAccept <event_handler>
    warn "Event handler (OnAccept) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class ChordPro::Wx::SongbookExport_wxg

1;

