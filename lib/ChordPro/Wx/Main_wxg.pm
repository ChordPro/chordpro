# generated by wxGlade 1.1.0b1 on Wed Oct 16 14:21:32 2024
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx qw[:allclasses];
use strict;

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package ChordPro::Wx::Main_wxg;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
    my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
    $parent //= undef;
    $id     //= -1;
    $title  //= "";
    $pos    //= wxDefaultPosition;
    $size   //= wxDefaultSize;
    $name   //= "";

    # begin wxGlade: ChordPro::Wx::Main_wxg::new
    use ChordPro::Wx::Utils;
    $style = wxDEFAULT_FRAME_STYLE
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
    $self->SetTitle(_T("ChordPro"));
    
    $self->{sz_outer} = Wx::BoxSizer->new(wxVERTICAL);
    
    $self->{sz_main} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sz_outer}->Add($self->{sz_main}, 1, wxALL|wxEXPAND, 5);
    
    $self->{p_init} = Wx::Panel->new($self, wxID_ANY);
    $self->{sz_main}->Add($self->{p_init}, 1, wxEXPAND, 0);
    
    $self->{sz_init} = Wx::BoxSizer->new(wxHORIZONTAL);
    
    $self->{sz_init}->Add(20, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_8} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sz_init}->Add($self->{sizer_8}, 1, wxEXPAND, 0);
    
    $self->{sizer_8}->Add(1, 1, 1, wxEXPAND, 0);
    
    my $bm_init = Wx::StaticBitmap->new($self->{p_init}, wxID_ANY, Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/chordpro-logo-narrow.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_8}->Add($bm_init, 0, wxEXPAND, 0);
    
    $self->{sizer_8}->Add(1, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_2} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sz_init}->Add($self->{sizer_2}, 0, wxEXPAND|wxLEFT, 20);
    
    $self->{l_init} = Wx::StaticText->new($self->{p_init}, wxID_ANY, _T("Welcome to ChordPro!"));
    $self->{l_init}->SetMinSize($self->{l_init}->ConvertDialogSizeToPixels(Wx::Size->new(132, 12)));
    $self->{l_init}->SetFont(Wx::Font->new(20, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, ""));
    $self->{sizer_2}->Add($self->{l_init}, 0, wxBOTTOM|wxFIXED_MINSIZE|wxTOP, 20);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_11} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2}->Add($self->{sizer_11}, 0, wxBOTTOM|wxEXPAND, 5);
    
    $self->{rb_createrecent} = Wx::RadioBox->new($self->{p_init}, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, [_T("Create"), _T("Recent")], 1, wxRA_SPECIFY_ROWS);
    $self->{rb_createrecent}->SetSelection(0);
    $self->{sizer_11}->Add($self->{rb_createrecent}, 1, 0, 0);
    
    $self->{sz_createrecentpanels} = Wx::BoxSizer->new(wxVERTICAL);
    $self->{sizer_2}->Add($self->{sz_createrecentpanels}, 1, wxEXPAND, 0);
    
    $self->{p_create} = Wx::Panel->new($self->{p_init}, wxID_ANY);
    $self->{sz_createrecentpanels}->Add($self->{p_create}, 0, 0, 0);
    
    $self->{sizer_1} = Wx::BoxSizer->new(wxVERTICAL);
    
    $self->{sizer_3} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_1}->Add($self->{sizer_3}, 0, wxEXPAND, 0);
    
    $self->{b_initnew} = Wx::Button->new($self->{p_create}, wxID_ANY, "");
    $self->{b_initnew}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/document-new32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_3}->Add($self->{b_initnew}, 0, wxEXPAND, 0);
    
    $self->{l_initnew} = Wx::StaticText->new($self->{p_create}, wxID_ANY, _T("Create a new song"));
    $self->{sizer_3}->Add($self->{l_initnew}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_1}->Add(1, 5, 1, wxEXPAND, 0);
    
    $self->{sizer_4} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_1}->Add($self->{sizer_4}, 0, wxEXPAND, 0);
    
    $self->{b_initopen} = Wx::Button->new($self->{p_create}, wxID_ANY, "");
    $self->{b_initopen}->SetFocus();
    $self->{b_initopen}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/document-open32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_4}->Add($self->{b_initopen}, 0, wxEXPAND, 0);
    
    $self->{l_initopen} = Wx::StaticText->new($self->{p_create}, wxID_ANY, _T("Open an existing song"));
    $self->{sizer_4}->Add($self->{l_initopen}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_1}->Add(1, 5, 1, wxEXPAND, 0);
    
    $self->{sizer_9} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_1}->Add($self->{sizer_9}, 0, wxEXPAND, 0);
    
    $self->{b_initsbexp} = Wx::Button->new($self->{p_create}, wxID_ANY, "");
    $self->{b_initsbexp}->SetToolTip(_T("Make a songbook from a folder of ChordPro files."));
    $self->{b_initsbexp}->SetFocus();
    $self->{b_initsbexp}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/document-more32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_9}->Add($self->{b_initsbexp}, 0, wxEXPAND, 0);
    
    $self->{l_initsbexp} = Wx::StaticText->new($self->{p_create}, wxID_ANY, _T("Make a songbook"));
    $self->{l_initsbexp}->Wrap(200);
    $self->{sizer_9}->Add($self->{l_initsbexp}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_1}->Add(1, 5, 1, wxEXPAND, 0);
    
    $self->{sizer_5} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_1}->Add($self->{sizer_5}, 0, wxEXPAND, 0);
    
    $self->{b_initexamople} = Wx::Button->new($self->{p_create}, wxID_ANY, "");
    $self->{b_initexamople}->SetFocus();
    $self->{b_initexamople}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/document-open32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_5}->Add($self->{b_initexamople}, 0, wxEXPAND, 0);
    
    $self->{l_initexample} = Wx::StaticText->new($self->{p_create}, wxID_ANY, _T("Open an example song"));
    $self->{sizer_5}->Add($self->{l_initexample}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{p_recent} = Wx::Panel->new($self->{p_init}, wxID_ANY);
    $self->{p_recent}->Show(0);
    $self->{sz_createrecentpanels}->Add($self->{p_recent}, 1, wxEXPAND, 0);
    
    $self->{sizer_10} = Wx::BoxSizer->new(wxVERTICAL);
    
    $self->{lb_recent} = Wx::ListBox->new($self->{p_recent}, wxID_ANY, wxDefaultPosition, wxDefaultSize, [_T("No recent songs")], wxLB_SINGLE);
    $self->{lb_recent}->Enable(0);
    $self->{sizer_10}->Add($self->{lb_recent}, 1, wxEXPAND, 0);
    
    $self->{l_recent} = Wx::StaticText->new($self->{p_recent}, wxID_ANY, "", wxDefaultPosition, wxDefaultSize, wxST_ELLIPSIZE_MIDDLE|wxST_NO_AUTORESIZE);
    $self->{l_recent}->SetToolTip(_T("Full file name will show here."));
    $self->{sizer_10}->Add($self->{l_recent}, 0, wxALL|wxEXPAND, 2);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    my $static_line_1 = Wx::StaticLine->new($self->{p_init}, wxID_ANY);
    $self->{sizer_2}->Add($static_line_1, 0, wxEXPAND, 0);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_6} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2}->Add($self->{sizer_6}, 0, wxEXPAND, 0);
    
    $self->{b_initwww} = Wx::Button->new($self->{p_init}, wxID_ANY, "");
    $self->{b_initwww}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/chordpro-web32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_6}->Add($self->{b_initwww}, 0, wxEXPAND, 0);
    
    $self->{l_initwww} = Wx::StaticText->new($self->{p_init}, wxID_ANY, _T("Visit the ChordPro site"));
    $self->{sizer_6}->Add($self->{l_initwww}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_7} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2}->Add($self->{sizer_7}, 0, wxEXPAND, 0);
    
    $self->{b_initdocs} = Wx::Button->new($self->{p_init}, wxID_ANY, "");
    $self->{b_initdocs}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/chordpro-web32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_7}->Add($self->{b_initdocs}, 0, wxEXPAND, 0);
    
    $self->{l_initdocs} = Wx::StaticText->new($self->{p_init}, wxID_ANY, _T("Read the documentation"));
    $self->{sizer_7}->Add($self->{l_initdocs}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    my $static_line_2 = Wx::StaticLine->new($self->{p_init}, wxID_ANY);
    $self->{sizer_2}->Add($static_line_2, 0, wxEXPAND, 0);
    
    $self->{sizer_2}->Add(1, 1, 1, wxEXPAND, 0);
    
    $self->{sizer_12} = Wx::BoxSizer->new(wxHORIZONTAL);
    $self->{sizer_2}->Add($self->{sizer_12}, 0, wxEXPAND, 0);
    
    $self->{b_exit} = Wx::Button->new($self->{p_init}, wxID_ANY, "");
    $self->{b_exit}->SetBitmap(Wx::Bitmap->new("/usr/local/src/ChordPro/lib/ChordPro/res/icons/exit32.png", wxBITMAP_TYPE_ANY));
    $self->{sizer_12}->Add($self->{b_exit}, 0, wxEXPAND, 0);
    
    $self->{l_exit} = Wx::StaticText->new($self->{p_init}, wxID_ANY, _T("Exit"));
    $self->{sizer_12}->Add($self->{l_exit}, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 10);
    
    $self->{sizer_2}->Add(1, 1, 5, wxEXPAND, 0);
    
    $self->{sz_init}->Add(20, 1, 1, wxEXPAND, 0);
    
    use ChordPro::Wx::EditorPanel;
    $self->{p_edit} = ChordPro::Wx::EditorPanel->new($self, wxID_ANY);
    $self->{p_edit}->Show(0);
    $self->{sz_main}->Add($self->{p_edit}, 1, wxEXPAND, 0);
    
    use ChordPro::Wx::SongbookExportPanel;
    $self->{p_sbexport} = ChordPro::Wx::SongbookExportPanel->new($self, wxID_ANY);
    $self->{sz_main}->Add($self->{p_sbexport}, 1, wxEXPAND, 0);
    
    use ChordPro::Wx::MessagesPanel;
    $self->{p_msg} = ChordPro::Wx::MessagesPanel->new($self, wxID_ANY);
    $self->{p_msg}->Show(0);
    $self->{sz_main}->Add($self->{p_msg}, 1, wxEXPAND, 0);
    
    $self->{p_recent}->SetSizer($self->{sizer_10});
    
    $self->{p_create}->SetSizer($self->{sizer_1});
    
    $self->{p_init}->SetSizer($self->{sz_init});
    
    $self->SetSizer($self->{sz_outer});
    $self->{sz_outer}->Fit($self);
    
    $self->Layout();
    Wx::Event::EVT_RADIOBOX($self, $self->{rb_createrecent}->GetId, $self->can('OnCreateRecent'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initnew}->GetId, $self->can('OnNew'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initopen}->GetId, $self->can('OnOpen'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initsbexp}->GetId, $self->can('OnExportFolder'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initexamople}->GetId, $self->can('OnHelp_Example'));
    Wx::Event::EVT_LISTBOX($self, $self->{lb_recent}->GetId, $self->can('OnRecentSelect'));
    Wx::Event::EVT_LISTBOX_DCLICK($self, $self->{lb_recent}->GetId, $self->can('OnRecentDclick'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initwww}->GetId, $self->can('OnHelp_ChordPro'));
    Wx::Event::EVT_BUTTON($self, $self->{b_initdocs}->GetId, $self->can('OnHelp_Config'));
    Wx::Event::EVT_BUTTON($self, $self->{b_exit}->GetId, $self->can('OnClose'));

    # end wxGlade
    return $self;

}


sub OnCreateRecent {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnCreateRecent <event_handler>
    warn "Event handler (OnCreateRecent) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnNew {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnNew <event_handler>
    warn "Event handler (OnNew) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnOpen {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnOpen <event_handler>
    warn "Event handler (OnOpen) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnExportFolder {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnExportFolder <event_handler>
    warn "Event handler (OnExportFolder) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnHelp_Example {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnHelp_Example <event_handler>
    warn "Event handler (OnHelp_Example) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnRecentSelect {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnRecentSelect <event_handler>
    warn "Event handler (OnRecentSelect) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnRecentDclick {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnRecentDclick <event_handler>
    warn "Event handler (OnRecentDclick) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnHelp_ChordPro {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnHelp_ChordPro <event_handler>
    warn "Event handler (OnHelp_ChordPro) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnHelp_Config {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnHelp_Config <event_handler>
    warn "Event handler (OnHelp_Config) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnClose {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::Main_wxg::OnClose <event_handler>
    warn "Event handler (OnClose) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class ChordPro::Wx::Main_wxg

1;

