#! perl

use strict;
use warnings;
use utf8;

# Implementation of ChordPro::Wx::PreviewPanel_wxg details.

package ChordPro::Wx::PreviewPanel;

# ChordPro::Wx::PreviewPanel_wxg is generated by wxGlade and contains
# all UI associated code.

use parent qw( ChordPro::Wx::PreviewPanel_wxg );

use Wx qw[:everything];
use Wx::Locale gettext => '_T';
use ChordPro::Wx::Utils;

sub new {
    my( $self, $parent, $id, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    $self = $self->SUPER::new( $parent, $id, $pos, $size, $style, $name );
    $self->Layout();
    return $self;

}

################ Event handlers ################

sub OnHide {
    my ( $self, $event ) = @_;
    $self->GetParent->select_mode( $self->GetParent->{_prev_mode} );
}

sub OnPreviewSave {
    my ($self, $event) = @_;
    my $conf = Wx::ConfigBase::Get;
    my $file;
    my $fd = Wx::FileDialog->new
      ($self, _T("Choose file to save in"),
       "", $file,
       "*.pdf",
       0|wxFD_SAVE|wxFD_OVERWRITE_PROMPT,
       wxDefaultPosition);
    my $ret = $fd->ShowModal;
    if ( $ret == wxID_OK ) {
	$file = $fd->GetPath;
	$self->log( 'S',  "Preview saved." );
    }
    $fd->Destroy;
    return $ret;
}

sub OnBack {
    my ( $self, $event ) = @_;
    $event->Skip;
}

sub OnMsgCancel {
    my ( $self, $event ) = @_;
    $self->select_mode("EDIT");
    $event->Skip;
}

1;

