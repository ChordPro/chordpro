#! perl

use strict;
use warnings;
use utf8;

# Implementation of ChordPro::Wx::InitialPanel_wxg details.

package ChordPro::Wx::InitialPanel;

# ChordPro::Wx::SoongbookExport_wxg is generated by wxGlade and contains
# all UI associated code.

use parent qw( ChordPro::Wx::InitialPanel_wxg );

use Wx qw[:everything];
use Wx::Locale gettext => '_T';
use ChordPro::Wx::Utils;
use File::Basename qw(basename);

sub new {
    my( $self, $parent, $id, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    $self = $self->SUPER::new( $parent, $id, $pos, $size, $style, $name );
    $self->Layout();
    return $self;

}

sub init {
    my ( $self ) = @_;

    my $r = $self->GetParent->Recents;

    if ( $r->count > 0 ) {
	my $ctl = $self->{lb_recent};
	$ctl->Clear;
	$ctl->Enable(1);
	for ( my $i = 0; $i < $r->count; $i++ ) {
	    my $file = $r->get($i);
	    $ctl->Append( basename($file) );
	    $ctl->SetClientData( $i, $file );
	}
    }
    $self->{rb_createrecent}->SetSelection(0);
    $self->OnCreateRecent;
}

sub OnInitialNew {
    my ( $self, $event ) = @_;
#    Wx::PostEvent( $self->GetParent,
#		   Wx::CommandEvent->new( wxEVT_COMMAND_MENU_SELECTED,
    #					  wxID_NEW ) );
    $self->GetParent->OnNew;
}

sub OnInitialOpen {
    my ( $self, $event ) = @_;
    Wx::PostEvent( $self->GetParent,
		   Wx::CommandEvent->new( wxEVT_COMMAND_MENU_SELECTED,
					  wxID_OPEN ) );
}

sub OnInitialExample {
    my ( $self, $event ) = @_;
    Wx::PostEvent( $self->GetParent,
		   Wx::CommandEvent->new( wxEVT_COMMAND_MENU_SELECTED,
					  $self->GetParent->wxID_HELP_EXAMPLE ) );
}

sub OnInitialSBexp {
    my ( $self, $event ) = @_;
    Wx::PostEvent( $self->GetParent,
		   Wx::CommandEvent->new( wxEVT_COMMAND_MENU_SELECTED,
					  $self->GetParent->wxID_EXPORT_FOLDER ) );
}

sub OnInitialSite {
    my ( $self, $event ) = @_;
    Wx::LaunchDefaultBrowser("https://www.chordpro.org/");
    $event->Skip;
}

sub OnInitialDocs {
    my ( $self, $event ) = @_;
    $self->OnHelp_ChordPro($event);
    $event->Skip;
}

sub OnInitialRecent {
    my ($self, $event) = @_;
    warn "Event handler (OnInitialRecent) not implemented";
    $event->Skip;
}

sub OnInitialRecentDclick {
    my ($self, $event) = @_;
    my $file = $self->{l_recent}->GetLabel;
    $self->GetParent->select_mode("EDIT");
    $self->GetParent->{p_edit}->openfile( $file, 0 );
    $event->Skip;
}

sub OnInitialRecentSelect {
    my ($self, $event) = @_;
    my $n = $self->{lb_recent}->GetSelection;
    my $file = $self->{lb_recent}->GetClientData($n);
    $self->{l_recent}->SetLabel($file);
    $self->{l_recent}->SetToolTip($file);
    $event->Skip;
}

sub OnCreateRecent {
    my ( $self, $event ) = @_;
    if ( $self->{rb_createrecent}->GetSelection == 0 ) {
	$self->{p_create}->Show(1);
	$self->{p_recent}->Show(0);
    }
    else {
	$self->{p_create}->Show(0);
	$self->{p_recent}->Show(1);
	$self->{p_recent}->SetSize( $self->{p_create}->GetSize );
    }
    $self->{sizer_10}->Layout;
    $self->{sz_createrecentpanels}->Layout;
}

1;

