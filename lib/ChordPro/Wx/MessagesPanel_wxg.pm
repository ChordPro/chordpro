# generated by wxGlade 1.1.0b1 on Tue Oct 15 15:42:05 2024
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx qw[:allclasses];
use strict;

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package ChordPro::Wx::MessagesPanel_wxg;

use Wx qw[:everything];
use base qw(Wx::Panel);
use strict;

sub new {
    my( $self, $parent, $id, $pos, $size, $style, $name ) = @_;
    $parent //= undef;
    $id     //= -1;
    $pos    //= wxDefaultPosition;
    $size   //= wxDefaultSize;
    $name   //= "";

    # begin wxGlade: ChordPro::Wx::MessagesPanel_wxg::new
    $style = wxTAB_TRAVERSAL
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $pos, $size, $style, $name );
    
    $self->{sz_msg} = Wx::StaticBoxSizer->new(Wx::StaticBox->new($self, wxID_ANY, "Messages"), wxVERTICAL);
    
    $self->{t_msg} = Wx::TextCtrl->new($self->{sz_msg}->GetStaticBox(), wxID_ANY, "", wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);
    $self->{sz_msg}->Add($self->{t_msg}, 1, wxEXPAND, 0);
    
    $self->{sizer_1} = Wx::FlexGridSizer->new(1, 4, 0, 5);
    $self->{sz_msg}->Add($self->{sizer_1}, 0, wxEXPAND|wxTOP, 5);
    
    $self->{l_status} = Wx::StaticText->new($self->{sz_msg}->GetStaticBox(), wxID_ANY, "Status");
    $self->{sizer_1}->Add($self->{l_status}, 0, wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    
    $self->{button_3} = Wx::Button->new($self->{sz_msg}->GetStaticBox(), wxID_CLEAR, "");
    $self->{sizer_1}->Add($self->{button_3}, 0, 0, 5);
    
    $self->{button_1} = Wx::Button->new($self->{sz_msg}->GetStaticBox(), wxID_SAVE, "");
    $self->{sizer_1}->Add($self->{button_1}, 0, 0, 5);
    
    $self->{b_hide} = Wx::Button->new($self->{sz_msg}->GetStaticBox(), wxID_ANY, "Hide Messages");
    $self->{sizer_1}->Add($self->{b_hide}, 0, 0, 0);
    
    $self->{sizer_1}->AddGrowableCol(0);
    
    $self->SetSizer($self->{sz_msg});
    $self->{sz_msg}->Fit($self);
    
    $self->Layout();
    Wx::Event::EVT_BUTTON($self, $self->{button_3}->GetId, $self->can('OnMsgClear'));
    Wx::Event::EVT_BUTTON($self, $self->{button_1}->GetId, $self->can('OnMsgSave'));
    Wx::Event::EVT_BUTTON($self, $self->{b_hide}->GetId, $self->can('OnHide'));

    # end wxGlade
    return $self;

}


sub OnMsgClear {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::MessagesPanel_wxg::OnMsgClear <event_handler>
    warn "Event handler (OnMsgClear) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnMsgSave {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::MessagesPanel_wxg::OnMsgSave <event_handler>
    warn "Event handler (OnMsgSave) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnHide {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::MessagesPanel_wxg::OnHide <event_handler>
    warn "Event handler (OnHide) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class ChordPro::Wx::MessagesPanel_wxg

1;

