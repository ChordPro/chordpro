#! perl

use strict;
use warnings;
use utf8;

# Implementation of ChordPro::Wx::MessagesPanel_wxg details.

package ChordPro::Wx::MessagesPanel;

# ChordPro::Wx::SoongbookExport_wxg is generated by wxGlade and contains
# all UI associated code.

use parent qw( ChordPro::Wx::MessagesPanel_wxg );

use Wx qw[:everything];
use Wx::Locale gettext => '_T';
use ChordPro::Wx::Utils;

sub new {
    my( $self, $parent, $id, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    $self = $self->SUPER::new( $parent, $id, $pos, $size, $style, $name );
    $self->Layout();
    return $self;

}

################ Event handlers ################

sub OnHide {
    my ( $self, $event ) = @_;
    $self->GetParent->select_mode( $self->GetParent->{_prev_mode} );
}

sub OnMsgSave {
    my ($self, $event) = @_;
    my $conf = Wx::ConfigBase::Get;
    my $file = $conf->Read( "messages/savedas", "" );
    my $fd = Wx::FileDialog->new
      ($self, _T("Choose file to save in"),
       "", $file,
       "*",
       0|wxFD_SAVE|wxFD_OVERWRITE_PROMPT,
       wxDefaultPosition);

    my $panel = Wx::Panel->new($id);
    my $cb = Wx::CheckBox->new( wxID_ANY );
    my $sz = Wx::BoxSizer();
    $sz->Add($cb);
    $panel->SetSizer($sz);
    
    $fd->SetExtraControlCreator($panel);
    my $ret = $fd->ShowModal;
    if ( $ret == wxID_OK ) {
	$file = $fd->GetPath;
	$self->{t_msg}->SaveFile($file);
	$self->log( 'S',  "Messages saved." );
	$conf->Write( "messages/savedas", $file );
    }
    $fd->Destroy;
    return $ret;
}

sub OnMsgClear {
    my ( $self, $event ) = @_;
    $self->{t_msg}->Clear;
    $event->Skip;
}

sub OnMsgCancel {
    my ( $self, $event ) = @_;
    $self->select_mode("EDIT");
    $event->Skip;
}

1;

