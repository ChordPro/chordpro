# generated by wxGlade 1.1.0b1 on Wed Sep 25 15:19:15 2024
#
# To get wxPerl visit http://www.wxperl.it
#

use Wx qw[:allclasses];
use strict;

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

package ChordPro::Wx::PreviewPanel_wxg;

use Wx qw[:everything];
use base qw(Wx::Panel);
use strict;

sub new {
    my( $self, $parent, $id, $pos, $size, $style, $name ) = @_;
    $parent = undef              unless defined $parent;
    $id     = -1                 unless defined $id;
    $pos    = wxDefaultPosition  unless defined $pos;
    $size   = wxDefaultSize      unless defined $size;
    $name   = ""                 unless defined $name;

    # begin wxGlade: ChordPro::Wx::PreviewPanel_wxg::new
    $style = wxTAB_TRAVERSAL
        unless defined $style;

    $self = $self->SUPER::new( $parent, $id, $pos, $size, $style, $name );
    
    $self->{sz_prv} = Wx::StaticBoxSizer->new(Wx::StaticBox->new($self, wxID_ANY, "Preview"), wxVERTICAL);
    
    $self->{webview} = Wx::WebView::New($self->{sz_prv}->GetStaticBox(), wxID_ANY, $self->{defaulturl});
    $self->{sz_prv}->Add($self->{webview}, 1, wxEXPAND, 0);
    
    $self->{sizer_1} = Wx::FlexGridSizer->new(1, 4, 0, 5);
    $self->{sz_prv}->Add($self->{sizer_1}, 0, wxEXPAND|wxTOP, 5);
    
    $self->{l_status} = Wx::StaticText->new($self->{sz_prv}->GetStaticBox(), wxID_ANY, "Status");
    $self->{sizer_1}->Add($self->{l_status}, 0, wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    
    $self->{button_3} = Wx::Button->new($self->{sz_prv}->GetStaticBox(), wxID_BACKWARD, "");
    $self->{sizer_1}->Add($self->{button_3}, 0, 0, 5);
    
    $self->{button_1} = Wx::Button->new($self->{sz_prv}->GetStaticBox(), wxID_SAVE, "");
    $self->{sizer_1}->Add($self->{button_1}, 0, 0, 5);
    
    $self->{b_msgs} = Wx::Button->new($self->{sz_prv}->GetStaticBox(), wxID_ANY, "Messages");
    $self->{sizer_1}->Add($self->{b_msgs}, 0, 0, 0);
    
    $self->{sizer_1}->AddGrowableCol(0);
    
    $self->SetSizer($self->{sz_prv});
    $self->{sz_prv}->Fit($self);
    
    $self->Layout();
    Wx::Event::EVT_BUTTON($self, $self->{button_3}->GetId, $self->can('OnBack'));
    Wx::Event::EVT_BUTTON($self, $self->{button_1}->GetId, $self->can('OnMsgSave'));
    Wx::Event::EVT_BUTTON($self, $self->{b_msgs}->GetId, $self->can('OnShowMessages'));

    # end wxGlade
    return $self;

}


sub OnBack {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::PreviewPanel_wxg::OnBack <event_handler>
    warn "Event handler (OnBack) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnMsgSave {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::PreviewPanel_wxg::OnMsgSave <event_handler>
    warn "Event handler (OnMsgSave) not implemented";
    $event->Skip;
    # end wxGlade
}


sub OnShowMessages {
    my ($self, $event) = @_;
    # wxGlade: ChordPro::Wx::PreviewPanel_wxg::OnShowMessages <event_handler>
    warn "Event handler (OnShowMessages) not implemented";
    $event->Skip;
    # end wxGlade
}


# end of class ChordPro::Wx::PreviewPanel_wxg

1;

